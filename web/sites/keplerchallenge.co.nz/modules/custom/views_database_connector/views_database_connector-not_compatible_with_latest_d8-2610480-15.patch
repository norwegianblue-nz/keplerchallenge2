diff --git a/views_database_connector.views.inc b/views_database_connector.views.inc
index c3bd979..2410843 100755
--- a/views_database_connector.views.inc
+++ b/views_database_connector.views.inc
@@ -5,6 +5,9 @@
  * Responsible for hooking views to add each database and its tables.
  */
 
+use Drupal\Core\Database\Database;
+use Drupal\Component\Utility\Html;
+
 /**
  * Implements hook_views_data().
  */
@@ -18,8 +21,8 @@ function views_database_connector_views_data() {
       // Make sure the table name hasn't been used before.
       if (!isset($data[$table[0]])) {
         // Set the title.
-        $title = '[VDC] ' . check_plain($dname) . ':  ';
-        $title .= check_plain($table[0]);
+        $title = '[VDC] ' . Html::escape($dname) . ':  ';
+        $title .= Html::escape($table[0]);
 
         // Setup the table for Views to be able to see it.
         $data[$table[0]]['table']['group'] = $table[0];
@@ -149,7 +152,8 @@ function views_database_connector_get_data_types() {
 function views_database_connector_get_database_schemas() {
   $dbs = array();
 
-  global $databases;
+  $databases = Database::getAllConnectionInfo();
+
   // Iterate through each of the database configurations.
   foreach ($databases as $key => $datab) {
     // Excluding the default database.
@@ -191,34 +195,32 @@ function views_database_connector_get_database_schema_mysql($key) {
     // names due to using information_schema.  We have the ability to
     // check on columns without the PDO table substitution problem.
     foreach ($row as $v) {
-      if (!in_array($v, array_keys(drupal_get_complete_schema()))) {
-        // Switch to database in question.
-        db_set_active($key);
-        // Fetch column names and their data type from said table.
-        $q = 'SELECT column_name, data_type FROM ';
-        $q .= 'information_schema.columns WHERE table_name = :table;';
-        $cols = db_query($q, array(':table' => $v));
-        // Switch back to the main database.
-        db_set_active('default');
-        $collist = array();
-        // Fetch a row, each with a column name.
-        while ($r = $cols->fetchAssoc()) {
-          $t = 'broken';
-          // Add column to column list.
-          if (isset($r['column_name'])) {
-            foreach ($types as $type => $matches) {
-              foreach ($matches as $match) {
-                if (stristr($r['data_type'], $match)) {
-                  $t = $type;
-                }
+      // Switch to database in question.
+      db_set_active($key);
+      // Fetch column names and their data type from said table.
+      $q = 'SELECT column_name, data_type FROM ';
+      $q .= 'information_schema.columns WHERE table_name = :table;';
+      $cols = db_query($q, array(':table' => $v));
+      // Switch back to the main database.
+      db_set_active('default');
+      $collist = array();
+      // Fetch a row, each with a column name.
+      while ($r = $cols->fetchAssoc()) {
+        $t = 'broken';
+        // Add column to column list.
+        if (isset($r['column_name'])) {
+          foreach ($types as $type => $matches) {
+            foreach ($matches as $match) {
+              if (stristr($r['data_type'], $match)) {
+                $t = $type;
               }
             }
-            $collist[] = array($t, $r['column_name']);
           }
+          $collist[] = array($t, $r['column_name']);
         }
-        // Add table and its columns to the table list.
-        $tablelist[] = array($v, $collist);
       }
+      // Add table and its columns to the table list.
+      $tablelist[] = array($v, $collist);
     }
   }
 
